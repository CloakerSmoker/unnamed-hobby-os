#Require "$/File.rlx"
#Require "$/Console.rlx"
#Require "./src/utility/FNT.rlx"

define void Main(i64 ArgC, i8** ArgV) {
	i8* Input := ArgV[1]
	i32 Character := ArgV[2][0]
	
	i64 F := FileOpen(Input, FILE_READ)
	FNTHeader* Header := FileReadAll(F)
	FileClose(F)
	
	;Print("type %x\n", Header->Type)
	;Print("weight %i\n", Header->Weight)
	;Print("%i characters\n", Header->CharacterCount())
	;
	;Print("%ix%i\n", Header->PixelWidth, Header->PixelHeight)
	;
	;Print("%i\n%i\n%i\n", Header->GlobalASpace, Header->GlobalBSpace, Header->GlobalCSpace)
	;
	;Print("First character:\n")
	
	;for (i32 Index := 'B', Index < Header->CharacterCount(), Index++) {
		FNTCharacterTableEntry* Entry := Header->CharacterTableEntry(Character - Header->Start())
		
		;Print("%i: %i wide, offset %x\n", Index, Entry->CharacterWidth, Entry->BitmapOffset)
		
		i8* Data := (Header As void*) + Entry->BitmapOffset
		
		i32 ColumnSize := Header->PixelHeight
		i32 ColumnBits := (Header->PixelWidth / 8) * 8
		
		if (Header->PixelWidth % 8) {
			ColumnBits += 8
		}
		
		i32 ColumnBitsEnd := ColumnBits - Header->PixelWidth
		
		for (i32 Row := 0, Row < Header->PixelHeight, Row++) {
			;Print("|")
			
			for (i32 Column := ColumnBits, Column > ColumnBitsEnd, Column--) {
				i32 ColumnBase := (Column / 8) * ColumnSize
				i32 ColumnBit := Column % 8
				
				i32 Value := (Data[ColumnBase + Row] & (1 << (ColumnBit As i8))) != 0
				
				if (Value) {
					Print("#")
				}
				else {
					Print(" ")
				}
			}
			
			;Print("|")
			Print("\n")
		}
		
		;break
	;}
}