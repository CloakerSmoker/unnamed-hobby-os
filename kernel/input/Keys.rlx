i8 KEY_MODIFIER_SHIFT   := 1
i8 KEY_MODIFIER_ALT     := 2
i8 KEY_MODIFIER_CONTROL := 4
i8 KEY_MODIFIER_META    := 8

define void PrintModifiers(i8 Modifiers) {
	if (Modifiers & KEY_MODIFIER_SHIFT) {
		Print("shift ")
	}
	
	if (Modifiers & KEY_MODIFIER_ALT) {
		Print("alt ")
	}
	
	if (Modifiers & KEY_MODIFIER_CONTROL) {
		Print("control ")
	}
	
	if (Modifiers & KEY_MODIFIER_META) {
		Print("meta ")
	}
}

i32 KEY_SPECIAL_BASE := 1
i32 KEY_HOME         := KEY_SPECIAL_BASE + 0
i32 KEY_INSERT       := KEY_SPECIAL_BASE + 1
i32 KEY_DELETE       := KEY_SPECIAL_BASE + 2
i32 KEY_END          := KEY_SPECIAL_BASE + 3
i32 KEY_PAGE_UP      := KEY_SPECIAL_BASE + 4
i32 KEY_PAGE_DOWN    := KEY_SPECIAL_BASE + 5
i32 KEY_BELL         := KEY_SPECIAL_BASE + 6
i32 KEY_BACKSPACE    := KEY_SPECIAL_BASE + 7
i32 KEY_TAB          := KEY_SPECIAL_BASE + 8
i32 KEY_ENTER        := KEY_SPECIAL_BASE + 9
i32 KEY_F1           := KEY_SPECIAL_BASE + 10
i32 KEY_F2           := KEY_SPECIAL_BASE + 11
i32 KEY_F3           := KEY_SPECIAL_BASE + 12
i32 KEY_F4           := KEY_SPECIAL_BASE + 13
i32 KEY_F5           := KEY_SPECIAL_BASE + 14
i32 KEY_F6           := KEY_SPECIAL_BASE + 15
i32 KEY_F7           := KEY_SPECIAL_BASE + 16
i32 KEY_F8           := KEY_SPECIAL_BASE + 17
i32 KEY_F9           := KEY_SPECIAL_BASE + 18
i32 KEY_F10          := KEY_SPECIAL_BASE + 19
i32 KEY_F11          := KEY_SPECIAL_BASE + 20
i32 KEY_F12          := KEY_SPECIAL_BASE + 21
i32 KEY_UP           := KEY_SPECIAL_BASE + 22
i32 KEY_DOWN         := KEY_SPECIAL_BASE + 23
i32 KEY_RIGHT        := KEY_SPECIAL_BASE + 24
i32 KEY_LEFT         := KEY_SPECIAL_BASE + 25
i32 KEY_ESCAPE       := KEY_SPECIAL_BASE + 27 ; NOT THE ESCAPE KEY
i32 KEY_ENTER        := KEY_SPECIAL_BASE + 28
i32 KEY_SPECIAL_LAST := 28

i32 KEY_ASCII_BASE := 32
i32 KEY_ASCII_LAST := 126

define void PrintKeyName(i32 KeyCode) {
	i8*[28] Names {
		"home", "insert", "delete", "end", "page-up", "page-down", "bell", "backspace", "tab",
		"enter", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12",
		"up", "down", "right", "left",
		"<esc>", "enter"
	}
	
	if (KEY_SPECIAL_BASE <= KeyCode && KeyCode <= KEY_SPECIAL_LAST) {
		Print("%s", Names[KeyCode - KEY_SPECIAL_BASE])
	}
	else {
		Print("%c", KeyCode)
	}
}

struct KeyInput {
	i32 KeyCode
	i8 Modifiers
}