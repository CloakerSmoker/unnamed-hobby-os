i64**** PML4T 	:= 0x20000 As i64****
i64*** PDPT 	:= 0x21000 As i64***
i64** PDT 		:= 0x22000 As i64**

i64* PT1 		:= 0x23000 As i64*
i64* PT2 		:= 0x24000 As i64*
i64* PT3 		:= 0x25000 As i64*
i64* PT4 		:= 0x26000 As i64*
i64* PT5 		:= 0x27000 As i64*
i64* PT6 		:= 0x28000 As i64*
i64* PT7 		:= 0x29000 As i64*
i64* PT8 		:= 0x2A000 As i64*
i64* PT9 		:= 0x2B000 As i64*

i64 PAGE_PRESENT := 1
i64 PAGE_WRITE := 2

define void MapPageTable(i64* PageTable, i64 ToAddress) {
	i64 ToPage := ToAddress / 0x1000
	
	for (i32 Index := 0, Index < 512, Index += 1) {
		PageTable[Index] := ((Index + ToPage) * 0x1000) | PAGE_PRESENT | PAGE_WRITE
	}
}

;struct PageFrameManager {
;	
;	
;	
;	
;}

define void SetupPaging() {
	PML4T[0] := PDPT | PAGE_PRESENT | PAGE_WRITE
	PDPT[0] := PDT | PAGE_PRESENT | PAGE_WRITE
	
	PDT[0] := PT1 | PAGE_PRESENT | PAGE_WRITE
	PDT[1] := PT2 | PAGE_PRESENT | PAGE_WRITE
	PDT[2] := PT3 | PAGE_PRESENT | PAGE_WRITE
	PDT[3] := PT4 | PAGE_PRESENT | PAGE_WRITE
	PDT[4] := PT5 | PAGE_PRESENT | PAGE_WRITE
	PDT[5] := PT6 | PAGE_PRESENT | PAGE_WRITE
	PDT[6] := PT7 | PAGE_PRESENT | PAGE_WRITE
	PDT[7] := PT8 | PAGE_PRESENT | PAGE_WRITE
	PDT[8] := PT9 | PAGE_PRESENT | PAGE_WRITE
	
	MapPageTable(PT1, 0)
	MapPageTable(PT2, 0xE0000000)
	MapPageTable(PT3, 0xE0000000 + 0x200000)
	MapPageTable(PT4, 0xE0000000 + 0x400000)
	MapPageTable(PT5, 0xE0000000 + 0x600000)
	MapPageTable(PT6, 0xE0000000 + 0x800000)
	MapPageTable(PT7, 0xE0000000 + 0xA00000)
	MapPageTable(PT8, 0xE0000000 + 0xC00000)
	MapPageTable(PT9, 0xE0000000 + 0xD00000)
	
	BochsPrintString("Page tables built\n")
	BochsPrintString("Mapping 0x20_0000 -> 0xE000_0000\n")
	
	SetCR3(PML4T)
}
