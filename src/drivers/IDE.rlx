#Require "./src/drivers/ATA.rlx"

struct IDEDiskController {
	ATAChannel ChannelOne
	ATAChannel ChannelTwo
	i32 ChannelCount

	i8 IsInitialized
	
	define void DetectDevices() {
		if (this->ChannelCount >= 1) {
			this~>ChannelOne->DetectDevices()

			if (this->ChannelCount = 2) {
				this~>ChannelTwo->DetectDevices()
			}
		}
	}
	
	define void Initialize(i32 ChannelOneIOBase, i32 ChannelOneControlBase, i32 ChannelTwoIOBase, i32 ChannelTwoControlBase) {
		if (ChannelOneIOBase != 0 && ChannelOneControlBase != 0) {
			this~>ChannelOne->Initialize(ChannelOneIOBase, ChannelOneControlBase)
			this->ChannelCount += 1

			if (ChannelTwoIOBase != 0 && ChannelTwoControlBase != 0) {
				this~>ChannelTwo->Initialize(ChannelTwoIOBase, ChannelTwoControlBase)
				this->ChannelCount += 1
			}
		}
		else if (ChannelTwoIOBase != 0 && ChannelTwoControlBase != 0) {
			this~>ChannelOne->Initialize(ChannelTwoIOBase, ChannelTwoControlBase)
			this->ChannelCount += 1
		}
		
		this->IsInitialized := true
	}
	
	define ATADevice* Disk(i32 Index) {
		if (Index = 0) {
			return this~>ChannelOne->Master
		}
		else if (Index = 1) {
			return this~>ChannelOne->Slave
		}
		else if (Index = 2) {
			return this~>ChannelTwo->Master
		}
		else if (Index = 3) {
			return this~>ChannelTwo->Slave
		}
		
		return null
	}
	
	define i32 FindFirstDiskIndex() {
		i32 MaxDisk := this->ChannelCount * 2

		for (i32 Index := 0, Index < MaxDisk, Index++) {
			if (this->Disk(Index)) {
				return Index
			}
		}
		
		return -1
	}
}

i32 IDE_LEGACY_PRIMARY_IO_BASE := 0x1F0
i32 IDE_LEGACY_PRIMARY_CONTROL_BASE := 0x3F6

i32 IDE_LEGACY_SECONDARY_IO_BASE := 0x170
i32 IDE_LEGACY_SECONDARY_CONTROL_BASE := 0x376

IDEDiskController* DiskController := null