#Require "$/File.rlx"
#Require "$/Console.rlx"
#Require "./src/utility/FNT.rlx"

define void Main(i64 ArgC, i8** ArgV) {
	i8* Input := ArgV[1]
	i32 Character := ArgV[2][0]
	
	i64 F := FileOpen(Input, FILE_READ)
	FNTHeader* Header := FileReadAll(F)
	FileClose(F)
	
	;Print("Version %x\n", Header->Version)
	;
	;Print("type %x\n", Header->Type)
	;Print("weight %i\n", Header->Weight)
	;Print("%i characters\n", Header->CharacterCount())
	;
	;Print("%ix%i\n", Header->PixelWidth, Header->PixelHeight)
	
	;
	;Print("First character:\n")
	
	;for (i32 Index := 'B', Index < Header->CharacterCount(), Index++) {
		;FNTCharacterTableEntry* Entry := Header->CharacterTableEntry(Character - Header->Start())
		
		;Print("%i: %i wide, offset %x\n", Character, Entry->CharacterWidth, Entry->BitmapOffset)
		
		i8* Data := Header->GetCharacterData(Character - Header->Start())
		
		i32 ColumnSize := Header->PixelHeight
		i32 ColumnBytes := Header->PixelWidth / 8
		
		if (Header->PixelWidth % 8) {
			ColumnBytes += 1
		}
		
		Print("%i\n", ColumnBytes)
		
		for (i32 Row := 0, Row < Header->PixelHeight, Row++) {
			Print("|")
			
			for (i32 ColumnByte := 0, ColumnByte < ColumnBytes, ColumnByte++) {
				i32 ColumnBase := (ColumnByte * ColumnSize) + Row
				i8 ColumnData := Data[ColumnBase]
				
				i32 ColumnEnd := 0
				
				if (ColumnByte + 1 = ColumnBytes && Header->PixelWidth % 8) {
					ColumnEnd := 8 - (Header->PixelWidth % 8)
				}
				
				;Print("Row %i column part %i at %x\n", Row, ColumnByte, ColumnBase)
				
				for (i32 Column := 7, Column >= ColumnEnd, Column--) {
					;Print("%ix%i: byte %x, bit %x\n", Row, Column, ColumnBase)
					
					i32 Value := (ColumnData & (1 << (Column As i8))) != 0
					
					if (Value) {
						Print("#")
					}
					else {
						Print(" ")
					}
				}
			}
			
			Print("|")
			Print("\n")
		}
		
		;break
	;}
}