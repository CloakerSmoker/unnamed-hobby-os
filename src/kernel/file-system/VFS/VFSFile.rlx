
#Require "./src/kernel/file-system/Handle.rlx"

class VFSFileHandle implements IFileHandle, derives INew {
    void* Buffer
    i32 Size

    i32 Offset

	define void New() {
		this->Buffer := Alloc(1)
	}

    define void Seek(i32 Destination, SeekMode Mode) {
		if (Mode = SeekMode:Set) {
			this->Offset := Destination
		}
		else if (Mode = SeekMode:Offset) {
			this->Offset += Destination
		}
		else if (Mode = SeekMode:End) {
			this->Offset := this->Size + Destination
		}
		
		if (this->Offset < 0) {
			this->Offset := 0
			
			;Throw(HANDLE_ERROR_BAD_PARAMETER)
		}
	}

	define i32 Tell() {
		return this->Offset
	}

    define i32 Read(void* Buffer, i32 Size) {
        i32 Remaining := this->Size - this->Offset

        if (Remaining < Size) {
            Size := Remaining
        }

        MoveMemory(Buffer, this->Buffer + this->Offset, Size)

		return Size
	}
	define i32 Write(void* Buffer, i32 Size) {
        if (this->Offset + Size > this->Size) {
            this->Size := this->Offset + Size
            this->Buffer := ReAlloc(Buffer, this->Size)
        }

		MoveMemory(this->Buffer + this->Offset, Buffer, Size)

        return Size
	}
}

#Require "./src/kernel/file-system/VFS/VFS.rlx"

class VFSFile implements IFile, derives INew {
    VFSFileHandle* Handle

    define void New(VFSFileHandle* Handle) {
        this->Handle := Handle
    }

    define i8 IsEphemeral() {
        return true
    }

    define IFileHandle* Open() {
        return this->Handle
    }
}
