define void ExecuteMount(i64 ArgC, i8** ArgV) {
    if (ArgC != 4) {
        return
    }

    i8* Type := ArgV[1]
    i8* DevicePath := ArgV[2]
    i8* DestinationPath := ArgV[3]

    VFSDirectoryEntry Entry
    if !(Lookup(CurrentDirectory, DevicePath, &Entry)) {
        Print("'%s' does not exist\n", DevicePath)
        return
    }

    if (Entry.Type != VFSDirectoryEntryType::File) {
        Print("'%s' not a file\n", DevicePath)
        return
    }

    IFile* File := Entry.File

    if !(File->Is(GetVFSBlockDeviceFilePrototype())) {
        Print("'%s' not a block device", DevicePath)
        return
    }

    VFSBlockDeviceFile* BlockDeviceFile := File As void*
    BlockDeviceFileHandle* BlockDeviceHandle := BlockDeviceFile->Handle As void*
    BlockDevice* Device := BlockDeviceHandle->Device

    IDirectory* DeviceRoot := null

    if (StringEquals(Type, "ext2")) {
        DeviceRoot := OpenExt2(Device)
    }
    else if (StringEquals(Type, "fat32")) {
        DeviceRoot := OpenFAT32(Device)
    }
    else {
        Print("'%s' unknown FS type\n", DevicePath)
        return
    }

    Mount(CurrentDirectory, DestinationPath, DeviceRoot)
}

i32 MOUNT_COMMAND_ID := RegisterCommand("mount", &ExecuteMount)