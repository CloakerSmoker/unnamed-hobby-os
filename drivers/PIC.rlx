
i16 MASTER_PIC := 0x20
i16 SLAVE_PIC := 0xA0

i16 MASTER_PIC_DATA := 0x21
i16 SLAVE_PIC_DATA  := 0xA1

define void RemapPIC(i8 MasterOffset, i8 SlaveOffset) {
	i8 OldMaster := InB(MASTER_PIC_DATA)
	i8 OldSlave := InB(SLAVE_PIC_DATA)
	
	OutB(MASTER_PIC, 0x11)
	OutB(SLAVE_PIC, 0x11)
	
	OutB(MASTER_PIC_DATA, MasterOffset)
	OutB(SLAVE_PIC_DATA, SlaveOffset)
	
	OutB(MASTER_PIC_DATA, 0x04)
	OutB(SLAVE_PIC_DATA, 0x02)
	
	OutB(MASTER_PIC_DATA, 0x01)
	OutB(SLAVE_PIC_DATA, 0x01)
	
	OutB(MASTER_PIC_DATA, 0xFF As i8)
	OutB(SLAVE_PIC_DATA, 0xFF As i8)
}

define void SendEOI(i8 IRQLine) {
	if (IRQLine >= 8) {
		OutB(SLAVE_PIC, 0x20)
	}
	
	OutB(MASTER_PIC, 0x20)
}

define void EnablePICLine(i8 IRQLine, i8 Enabled) {
	i16 Port := MASTER_PIC_DATA
	
	if (IRQLine >= 8) {
		Port := SLAVE_PIC_DATA
		IRQLine -= 8
	}
	
	i32 Value := InB(Port)
	
	if (Enabled) {
		Value := Value & ~(1 << IRQLine)
	}
	else {
		Value := Value | (1 << IRQLine)
	}
	
	OutB(Port, Value As i8)
}