#Require "./src/drivers/block-device/BlockDevice.rlx"

#Require "./src/drivers/ATA.rlx"
#Require "./src/drivers/IDE.rlx"

struct ATABlockDeviceInstance {
	#Include "./src/drivers/block-device/BlockDeviceInstance.rlx"
	
	ATADevice* Device
	
	define void Read(i64 FirstBlock, i64 BlockCount, void* Buffer) {
		this->Device->Read(FirstBlock, BlockCount, Buffer)
	}
	define void Write(i64 FirstBlock, i64 BlockCount, void* Buffer) {
		this->Device->Write(FirstBlock, BlockCount, Buffer)
	}
	define i64 GetBytesPerBlock() {
		return 512
	}
	define void Initialize(i8** Options, i32 OptionCount) {
		i32 Index := AToI(Options[0]) As i32
		
		this->Device := DiskController->Disk(Index)
	}
}

BlockDevicePrototype ATABlockDevicePrototype {
	DataSize: #ATABlockDeviceInstance,
	
	Read: &ATABlockDeviceInstance.Read,
	Write: &ATABlockDeviceInstance.Write,
	GetBytesPerBlock: &ATABlockDeviceInstance.GetBytesPerBlock,
	Initialize: &ATABlockDeviceInstance.Initialize,
	
	Name: "ATA",
	
	IsRoot: true,
	IsLeaf: false
}

i32 ATA_BLOCK_DEVICE_PROTOTYPE_ID := RegisterBlockDevicePrototype(&ATABlockDevicePrototype)